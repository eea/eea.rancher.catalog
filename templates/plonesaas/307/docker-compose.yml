version: '2'
services:
  plone:
    {{- if eq .Values.MODE "develop"}}
    image: eeacms/plonesaas-devel
    {{- else}}
    image: eeacms/plonesaas:5.2.9-59
    {{- end}}
    ports:
    - "8080"
    mem_reservation: ${MEM_LIMIT}
    mem_limit: ${MEM_LIMIT}
    labels:
      {{- if eq .Values.MODE "develop"}}
      io.rancher.container.pull_image: always
      {{- end}}
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.plone3: 'true'
    links:
    - postfix
    - memcached
    - zeo
    {{- if eq .Values.MODE "develop"}}
    - debug
    {{- end}}
    depends_on:
    - postfix
    - memcached
    - zeo
    {{- if eq .Values.MODE "develop"}}
    - debug
    {{- end}}
    volumes:
    - zeocache:/data
    {{- if eq .Values.MODE "production"}}
    - ${IMPORT_VOLUME_NAME}:/plone/imports
    - ${DUMP_VOLUME_NAME}:/plone/instance/var/ldapdump
    {{- end}}
    {{- if eq .Values.MODE "develop"}}
    - ${SRC_VOLUME_NAME}:/plone/instance/src
    {{- end}}
    environment:
      ZEO_ADDRESS: zeo:8080
      ZOPE_MODE: "zeo_client"
      SENTRY_DSN: "${SENTRY_DSN}"
      SENTRY_SITE: "eionet.europa.eu"
      SENTRY_RELEASE: '5.2.9-59'
      BACKEND_VERSION: '5.2.9-59'
      CORS_ALLOW_ORIGIN: "${CORS_ALLOW_ORIGIN}"
      RABBITMQ_HOST: "${RABBITMQ_HOST}"
      RABBITMQ_USER: "${RABBITMQ_USER}"
      RABBITMQ_PASS: "${RABBITMQ_PASS}"
      RESTART_CRON: "${PLONE_RESTART_CRON}"
      TZ: ${TZ}

      DEFAULT_PUBLISHER_eprtr: "${DEFAULT_PUBLISHER_eprtr}"
      DEFAULT_ORGANISATIONS_eprtr: "${DEFAULT_ORGANISATIONS_eprtr}"
      STATIC_BANNER_ENABLED_eprtr: "${STATIC_BANNER_ENABLED_eprtr}"
      DYNAMIC_BANNER_ENABLED_eprtr: "${DYNAMIC_BANNER_ENABLED_eprtr}"

      DEFAULT_PUBLISHER_fise: "${DEFAULT_PUBLISHER_fise}"
      DEFAULT_ORGANISATIONS_fise: "${DEFAULT_ORGANISATIONS_fise}"
      STATIC_BANNER_ENABLED_fise: "${STATIC_BANNER_ENABLED_fise}"
      DYNAMIC_BANNER_ENABLED_fise: "${DYNAMIC_BANNER_ENABLED_fise}"

      DEFAULT_PUBLISHER_energy: "${DEFAULT_PUBLISHER_energy}"
      DEFAULT_ORGANISATIONS_energy: "${DEFAULT_ORGANISATIONS_energy}"
      STATIC_BANNER_ENABLED_energy: "${STATIC_BANNER_ENABLED_energy}"
      DYNAMIC_BANNER_ENABLED_energy: "${DYNAMIC_BANNER_ENABLED_energy}"

      DEFAULT_PUBLISHER_sustainability: "${DEFAULT_PUBLISHER_sustainability}"
      DEFAULT_ORGANISATIONS_sustainability: "${DEFAULT_ORGANISATIONS_sustainability}"
      STATIC_BANNER_ENABLED_sustainability: "${STATIC_BANNER_ENABLED_sustainability}"
      DYNAMIC_BANNER_ENABLED_sustainability: "${DYNAMIC_BANNER_ENABLED_sustainability}"

      DEFAULT_PUBLISHER_circularity: "${DEFAULT_PUBLISHER_circularity}"
      DEFAULT_ORGANISATIONS_circularity: "${DEFAULT_ORGANISATIONS_circularity}"
      STATIC_BANNER_ENABLED_circularity: "${STATIC_BANNER_ENABLED_circularity}"
      DYNAMIC_BANNER_ENABLED_circularity: "${DYNAMIC_BANNER_ENABLED_circularity}"
      OIDC_ISSUER_circularity: "${OIDC_ISSUER_circularity}"
      OIDC_CLIENT_ID_circularity: "${OIDC_CLIENT_ID_circularity}"
      OIDC_CLIENT_SECRET_circularity: "${OIDC_CLIENT_SECRET_circularity}"
      OIDC_REDIRECT_URIS_circularity: "${OIDC_REDIRECT_URIS_circularity}"
      OIDC_USE_SESSION_DATA_MANAGER_circularity: "${OIDC_USE_SESSION_DATA_MANAGER_circularity}"
      OIDC_CREATE_TICKET_circularity: "${OIDC_CREATE_TICKET_circularity}"
      OIDC_CREATE_RESTAPI_TICKET_circularity: "${OIDC_CREATE_RESTAPI_TICKET_circularity}"
      OIDC_CREATE_USER_circularity: "${OIDC_CREATE_USER_circularity}"
      OIDC_SCOPE_circularity: "${OIDC_SCOPE_circularity}"
      OIDC_USE_PKCE_circularity: "${OIDC_USE_PKCE_circularity}"
      OIDC_USE_MODIFIED_OPENID_SCHEMA_circularity: "${OIDC_USE_MODIFIED_OPENID_SCHEMA_circularity}"

  debug:
    image: eeacms/plonesaas-devel
    ports:
    - "8080"
    mem_reservation: ${MEM_LIMIT}
    mem_limit: ${MEM_LIMIT}
    labels:
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.debug: 'true'
    links:
    - postfix
    - memcached
    - zeo
    depends_on:
    - postfix
    - memcached
    - zeo
    volumes:
    - ${SRC_VOLUME_NAME}:/plone/instance/src
    - zeocache:/data
    environment:
      ZEO_ADDRESS: zeo:8080
      ZOPE_MODE: "zeo_client"
      SENTRY_DSN: "${SENTRY_DSN}"
      SENTRY_SITE: "eionet.europa.eu"
      SENTRY_RELEASE: '5.2.9-59'
      BACKEND_VERSION: '5.2.9-59'
      CORS_ALLOW_ORIGIN: "${CORS_ALLOW_ORIGIN}"
      RABBITMQ_HOST: "${RABBITMQ_HOST}"
      RABBITMQ_USER: "${RABBITMQ_USER}"
      RABBITMQ_PASS: "${RABBITMQ_PASS}"
      STATIC_BANNER_ENABLED: "${STATIC_BANNER_ENABLED}"
      TZ: ${TZ}
    tty: true
    stdin_open: true
    command:
    - "/debug.sh"

  {{- if eq .Values.MODE "develop"}}
  cloud9:
    image: eeacms/cloud9
    mem_limit: 512m
    mem_reservation: 512m
    ports:
    - "8080"
    links:
    - debug
    depends_on:
    - debug
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.cloud9: 'true'
    volumes:
    - ${SRC_VOLUME_NAME}:/cloud9/workspace/src
  {{- end}}

  zeo:
    image: eeacms/plonesaas:5.2.9-9 #gitflow-disable - Keep this comment to disable automatic upgrades by gitflow
    mem_reservation: ${MEM_LIMIT}
    mem_limit: ${MEM_LIMIT}
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.zeo3: 'true'
    volumes:
    - ${DATA_VOLUME_NAME}:/data
    environment:
      ZOPE_MODE: "zeo"
      TZ: ${TZ}
      RESTART_CRON: "${ZEO_RESTART_CRON}"
      CRON_JOBS: "${ZEO_CRON_JOBS}"
    command:
    - zeo

  varnish:
    image: eeacms/varnish-plonesaas:4.1-6.4
    mem_reservation: 4g
    mem_limit: 4g
    ports:
    - "6081"
    - "6085"
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.varnish3: 'true'
    links:
    - haproxy
    depends_on:
    - haproxy
    environment:
      TZ: "${TZ}"
      BACKENDS: haproxy
      DASHBOARD_USER: "${DASHBOARD_USER}"
      DASHBOARD_PASSWORD: "${DASHBOARD_PASSWORD}"
      AUTOKILL_CRON: "${AUTOKILL_CRON}"

  haproxy:
    image: eeacms/haproxy:1.8-1.3
    mem_limit: 256m
    mem_reservation: 256m
    ports:
    - "8080"
    - "1936"
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.haproxy3: 'true'
    links:
    - plone
    depends_on:
    - plone
    environment:
      STATS_AUTH: "${HAPROXY_AUTH}"
      FRONTEND_PORT: "8080"
      BACKENDS_PORT: "8080"
      BACKENDS: "plone"
      DNS_ENABLED: "true"
      INTER: "20s"
      DOWN_INTER: "5s"
      FAST_INTER: "15s"
      TIMEOUT_SERVER: "120s"
      TIMEOUT_CLIENT: "120s"
      TZ: "${TZ}"
      HTTPCHK: "HEAD /haproxycheck"

  postfix:
    {{- if ne .Values.MODE "production"}}
    image: eaudeweb/mailtrap:2.3
    ports:
    - "80"
    {{- else}}
    image: eeacms/postfix:2.10-3.3
    environment:
      MTP_HOST: ${POSTFIX_SERVER_NAME}
      MTP_RELAY: ${POSTFIX_RELAY}
      MTP_PORT: ${POSTFIX_PORT}
      MTP_PASS: ${POSTFIX_PASS}
      MTP_USER: ${POSTFIX_USER}
      TZ: ${TZ}
    {{- end}}
    mem_limit: 256m
    mem_reservation: 128m
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.postfix3: 'true'

  memcached:
    image: memcached:1.6.20-alpine
    mem_limit: 1g
    mem_reservation: 1g
    command:
    - "-m"
    - "1024"
    - "-I"
    - "50m"
    environment:
      TZ: ${TZ}
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.memcached3: 'true'

  {{- if .Values.FLUSH_MEMCACHED_CRON}}
  memcachedflush:
    image: alpine:3.11
    depends_on:
    - memcached
    links:
    - memcached
    entrypoint:
    - sh
    - -c
    - echo 'flush_all' | nc memcached 11211
    labels:
      io.rancher.container.pull_image: always
      io.rancher.container.start_once: 'true'
      io.rancher.scheduler.affinity:host_label: ${HOST_LABELS}
      io.rancher.container.hostname_override: container_name
      cron.schedule: "${FLUSH_MEMCACHED_CRON}"
  {{- end}}

  {{- if eq .Values.MODE "production"}}
  mediaserver:
    mem_limit: 128m
    mem_reservation: 128m
    image: eeacms/nginx-eionet-styles:1.5
    ports:
    - "8080"
    environment:
      LOGSPOUT: ignore
      TZ: "${TZ}"
    volumes:
    - ${STATIC_VOLUME_NAME}:/opt/zope/var/styles:ro
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.mediaserver3: 'true'
  {{- end}}

  cron-mail-archive:
    mem_limit: 16777216
    image: alpine:3.8
    environment:
      LOGSPOUT: ignore
    mem_reservation: 16777216
    command:
    - wget
    - -O -
    - -nv
    - http://plone:8080/Eionet/cronjobs/update_archives?key=Thathoo0
    labels:
      io.rancher.container.start_once: 'true'
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.cron3: 'true'
      cron.schedule: 0 0 0 * * *

  rsync-client:
    image: eeacms/rsync:2.1
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
    environment:
      TZ: "${TZ}"
      CRON_TASKS: "${RSYNC_CRON_TASKS}"
    volumes:
    - ${DATA_VOLUME_NAME}:/data
    - plonesaas_rsync_client:/root/.ssh
    command:
    - client

  rsync-server:
    image: eeacms/rsync:2.1
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label: plonesaas.rsync=yes
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
    ports:
    - "2222:22"
    environment:
      TZ: "${TZ}"
      SSH_AUTH_KEYS: "${SSH_AUTH_KEYS}"
    volumes:
    - ${DATA_VOLUME_NAME}:/data
    command:
    - server

volumes:
  plonesaas_rsync_client:
    driver: local
  zeocache:
    driver: rancher-nfs
    per_container: true

  {{ .Values.DATA_VOLUME_NAME }}:
    driver: ${DATA_VOLUME_DRIVER}
    {{- if eq .Values.VOLUME_EXTERNAL "yes"}}
    external: true
    {{- end}}
    driver_opts:
      {{.Values.DATA_VOLUME_DRIVER_OPTS}}

  {{- if eq .Values.MODE "develop"}}
  {{ .Values.SRC_VOLUME_NAME }}:
    driver: rancher-nfs
    {{- if eq .Values.VOLUME_EXTERNAL "yes"}}
    external: true
    {{- end}}
  {{- end}}

{{- if eq .Values.MODE "production"}}

  {{ .Values.IMPORT_VOLUME_NAME }}:
    {{- if eq .Values.VOLUME_EXTERNAL "yes"}}
    external: true
    {{- end}}
    driver: rancher-nfs

  {{ .Values.STATIC_VOLUME_NAME }}:
    {{- if eq .Values.VOLUME_EXTERNAL "yes"}}
    external: true
    {{- end}}
    driver: rancher-nfs

  {{ .Values.DUMP_VOLUME_NAME }}:
    {{- if eq .Values.VOLUME_EXTERNAL "yes"}}
    external: true
    {{- end}}
    driver: rancher-nfs

{{- end}}
