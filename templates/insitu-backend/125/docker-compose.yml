version: '2'
services:

  haproxy:
    image: eeacms/haproxy:1.8-1.7
    mem_limit: 128m
    mem_reservation: 128m
    {{- if eq .Values.DEBUG_PORTS "true" }}
    ports:
    - '8080'
    - '1936'
    {{- end }}
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.eea.www.haproxy: 'true'
    links:
    - plone
    depends_on:
    - plone
    environment:
      STATS_AUTH: '${HAPROXY_AUTH}'
      FRONTEND_PORT: '8080'
      BACKENDS_PORT: '8080'
      BACKENDS: 'plone'
      DNS_ENABLED: 'true'
      INTER: '20s'
      DOWN_INTER: '5s'
      FAST_INTER: '15s'
      TIMEOUT_SERVER: '120s'
      TIMEOUT_CLIENT: '120s'
      TZ: '${TZ}'
      HTTPCHK: 'HEAD /'
 
  varnish:
    image: eeacms/plone-varnish:7.7-1.0
    environment:
      VARNISH_BACKEND: 'haproxy'
      VARNISH_BACKEND_PORT: '8080'
      VARNISH_HTTP_PORT: '8080'
      VARNISH_SIZE: '${CACHE_SIZE}'
      VARNISH_DNS_TTL: '20s'
      VARNISH_BERESP_TTL: '${VARNISH_BERESP_TTL}'
      VARNISH_BERESP_GRACE: '${VARNISH_BERESP_GRACE}'
      VARNISH_BERESP_KEEP: '${VARNISH_BERESP_KEEP}'
      VARNISH_GZIP_ENABLED: "${VARNISH_GZIP_ENABLED}"
      VARNISH_GZIP_JSON_ENABLED: "${VARNISH_GZIP_JSON_ENABLED}"
      TZ: '${TZ}'
    {{- if eq .Values.DEBUG_PORTS "true" }}
    ports:
    - '8080'
    {{- end }}
    links:
    - haproxy
    depends_on:
    - haproxy
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      {{- if eq .Values.TRAEFIK_ENABLE "true" }}
      traefik.enable: true
      traefik.http.routers.{{.Values.TRAEFIK_SERVICE}}.rule: Host({{ .Values.TRAEFIK_URL }}) && PathPrefix(`/VirtualHostBase/https/`)
      traefik.http.services.{{.Values.TRAEFIK_SERVICE}}.loadbalancer.server.port: '8080'
      traefik.http.routers.{{.Values.TRAEFIK_SERVICE}}.service: {{.Values.TRAEFIK_SERVICE}}@rancher

      {{- if (.Values.TRAEFIK_GEOBLOCK)}}
      {{- if eq .Values.TRAEFIK_ENABLE_RL "true" }}
      traefik.http.routers.{{.Values.TRAEFIK_SERVICE}}.middlewares: {{.Values.TRAEFIK_SERVICE}}-geoblock@rancher,{{.Values.TRAEFIK_SERVICE}}-ratelimit@rancher
      {{- else }}
      traefik.http.routers.{{.Values.TRAEFIK_SERVICE}}.middlewares: {{.Values.TRAEFIK_SERVICE}}-geoblock@rancher
      {{- end }}
      traefik.http.middlewares.{{.Values.TRAEFIK_SERVICE}}-geoblock.plugin.geoblock.disallowedCountries: {{ .Values.TRAEFIK_GEOBLOCK }}
      traefik.http.middlewares.{{.Values.TRAEFIK_SERVICE}}-geoblock.plugin.geoblock.disallowedStatusCode: '204'
      traefik.http.middlewares.{{.Values.TRAEFIK_SERVICE}}-geoblock.plugin.geoblock.enabled: 'true'
      traefik.http.middlewares.{{.Values.TRAEFIK_SERVICE}}-geoblock.plugin.geoblock.databaseFilePath: /plugins-local/src/github.com/kucjac/traefik-plugin-geoblock/IP2LOCATION-LITE-DB1.IPV6.BIN
      traefik.http.middlewares.{{.Values.TRAEFIK_SERVICE}}-geoblock.plugin.geoblock.allowPrivate: 'true'
      {{- end}}

      {{- if eq .Values.TRAEFIK_ENABLE_RL "true" }}
      {{- if not (.Values.TRAEFIK_GEOBLOCK) }}
      traefik.http.routers.{{.Values.TRAEFIK_SERVICE}}.middlewares: {{.Values.TRAEFIK_SERVICE}}-ratelimit@rancher
      {{- end }}
      traefik.http.middlewares.{{.Values.TRAEFIK_SERVICE}}-ratelimit.ratelimit.sourcecriterion.ipstrategy.depth: '2'
      traefik.http.middlewares.{{.Values.TRAEFIK_SERVICE}}-ratelimit.ratelimit.average: {{.Values.TRAEFIK_RATE_LIMIT_AVG}}
      traefik.http.middlewares.{{.Values.TRAEFIK_SERVICE}}-ratelimit.ratelimit.period: {{.Values.TRAEFIK_RATE_LIMIT_PERIOD}}
      traefik.http.middlewares.{{.Values.TRAEFIK_SERVICE}}-ratelimit.ratelimit.burst: {{.Values.TRAEFIK_RATE_LIMIT_BURST}}
      {{- end }}

      {{- end}}
    mem_limit: ${VARNISH_MEM_LIMIT}
    mem_reservation: ${VARNISH_MEM_RESERVATION}

  plone:
    image: eeacms/insitu-backend:6.0.15-21
    {{- if eq .Values.DEBUG_PORTS "true" }}
    ports:
    - '8080'
    {{- end }}
    mem_reservation: ${MEM_LIMIT}
    mem_limit: ${MEM_LIMIT}
    labels:
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.eea.www.plone: 'true'
    links:
    - postfix
    - memcached
    - postgres
    depends_on:
    - postfix
    - memcached
    - postgres
    environment:
      RELSTORAGE_DSN: "host='postgres' dbname='${POSTGRES_DB}' user='${POSTGRES_USER}' password='${POSTGRES_PASSWORD}'"
      GRAYLOG: 'logcentral.eea.europa.eu:12201'
      SERVER_NAME: '${SERVER_NAME}'
      GRAYLOG_FACILITY: '${SERVER_NAME}'
      SENTRY_DSN: '${SENTRY_DSN}'
      SENTRY_SITE: '${SERVER_NAME}'
      SENTRY_RELEASE: '6.0.15-21'
      BACKEND_VERSION: '6.0.15-21'
      CORS_ALLOW_ORIGIN: '${CORS_ALLOW_ORIGIN}'
      DEFAULT_PUBLISHER: '${DEFAULT_PUBLISHER}'
      DEFAULT_ORGANISATIONS: '${DEFAULT_ORGANISATIONS}'
      STATIC_BANNER_ENABLED: '${STATIC_BANNER_ENABLED}'
      DYNAMIC_BANNER_ENABLED: '${DYNAMIC_BANNER_ENABLED}'
      TZ: '${TZ}'
      CIS2_IMPORT_VIEW_TOKEN: '${CIS2_IMPORT_VIEW_TOKEN}'
      CIS2_IMPORT_TOKEN: '${CIS2_IMPORT_TOKEN}'
      CIS2_IMPORT_URL: '${CIS2_IMPORT_URL}'

  {{- if eq .Values.DEBUG "Yes" }}
  debug:
    image: eeacms/insitu-backend-devel
    ports:
    - '8080'
    mem_reservation: ${MEM_LIMIT}
    mem_limit: ${MEM_LIMIT}
    labels:
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.eea.www.debug: 'true'
    links:
    - postfix
    - memcached
    - postgres
    depends_on:
    - postfix
    - memcached
    - postgres
    environment:
      RELSTORAGE_DSN: "host='postgres' dbname='${POSTGRES_DB}' user='${POSTGRES_USER}' password='${POSTGRES_PASSWORD}'"
      GRAYLOG: 'logcentral.eea.europa.eu:12201'
      SERVER_NAME: '${SERVER_NAME}'
      GRAYLOG_FACILITY: '${SERVER_NAME}'
      SENTRY_DSN: '${SENTRY_DSN}'
      SENTRY_SITE: '${SERVER_NAME}'
      SENTRY_RELEASE: '6.0.15-21'
      BACKEND_VERSION: '6.0.15-21'
      STATIC_BANNER_ENABLED: '${STATIC_BANNER_ENABLED}'
      CORS_ALLOW_ORIGIN: '${CORS_ALLOW_ORIGIN}'
      TZ: '${TZ}'
    stdin_open: true
    tty: true
    command:
    - cat

  postfix:
    image: eaudeweb/mailtrap:2.3
    ports:
    - '80'
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.eea.www.postfix: 'true'
    environment:
      MTP_HOST: '${POSTFIX_SERVER_NAME}'
      MTP_RELAY: '${POSTFIX_RELAY}'
      MTP_PORT: '${POSTFIX_PORT}'
      MTP_PASS: '${POSTFIX_PASS}'
      MTP_USER: '${POSTFIX_USER}'
      TZ: '${TZ}'
    mem_limit: 256m
    mem_reservation: 128m
  {{- else}}
  postfix:
    image: eeacms/postfix:3.5-1.0
    mem_limit: 256m
    mem_reservation: 128m
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.eea.www.postfix: 'true'
    environment:
      MTP_HOST: '${POSTFIX_SERVER_NAME}'
      MTP_RELAY: '${POSTFIX_RELAY}'
      MTP_PORT: '${POSTFIX_PORT}'
      MTP_USER: '${POSTFIX_USER}'
      MTP_PASS: '${POSTFIX_PASS}'
      TZ: '${TZ}'
  {{- end}}

  cis2import:
    image: curlimages/curl:8.8.0
    entrypoint:
    - /bin/sh
    - -c
    - curl -v "https://insitu.copernicus.eu/admin/cis2_import_data?token=${CIS2_IMPORT_VIEW_TOKEN}"
    labels:
      io.rancher.container.start_once: 'true'
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes
      cron.schedule: '0 0 3 * * *'

  postgres:
    image: rancher/dns-service
    external_links:
    - ${POSTGRES}:postgres

  memcached:
    image: rancher/dns-service
    external_links:
    - ${MEMCACHED}:memcached

  cis2:
    image: rancher/external-service
