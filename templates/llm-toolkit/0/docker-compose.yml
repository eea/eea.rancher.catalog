version: '2'
services:
  litellm:
    image: litellm/litellm:v1.61.13-stable
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - DATABASE_URL=postgres://postgres:password@postgres:5432/litellm
      - STORE_MODEL_IN_DB=True
      - LITELLM_TURN_ON_MESSAGE_LOGGING=True
      - LITELLM_LOG_LEVEL=debug
      - LITELLM_TPM_LIMIT=1000  # Set a higher Tokens Per Minute limit
      - LITELLM_RPM_LIMIT=60    # Set a higher Requests Per Minute limit
      - LITELLM_MASTER_KEY=${litellm_master_key}
    command: [ "--port", "4000", "--num_workers", "8" ]
    labels:
      io.rancher.scheduler.affinity:host_label: ${host_labels}
      io.rancher.container.hostname_override: container_name
    mem_limit: ${postgres_mem_limit}
    mem_reservation: ${postgres_mem_reservation}

  postgres:
    image: postgres:15.2-alpine
    restart: always
    environment:
      - TZ="${TZ}"
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432"
    volumes:
      - ./data/db_volume:/var/lib/postgresql/data
    volumes:
      - ${DB_VOLUME}:/var/lib/postgresql/data
    labels:
      io.rancher.scheduler.affinity:host_label: ${host_labels}
      io.rancher.container.hostname_override: container_name
    mem_limit: ${postgres_mem_limit}
    mem_reservation: ${postgres_mem_reservation}

  langfuse-worker:
    image: langfuse/langfuse-worker:3
    restart: always
    depends_on:
      - postgres
      - minio
      - redis
      - clickhouse
    environment:
      DATABASE_URL: postgres://postgres:password@postgres:5432/langfuse
      SALT: "mysalt"
      ENCRYPTION_KEY: ${LANGFUSE_ENCRYPTION_KEY}
      TELEMETRY_ENABLED: true
      LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES: true
      CLICKHOUSE_MIGRATION_URL: clickhouse://clickhouse:9000
      CLICKHOUSE_URL: http://clickhouse:8123
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
      CLICKHOUSE_CLUSTER_ENABLED: false
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_EVENT_UPLOAD_REGION: auto
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: http://minio:9000
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: true
      LANGFUSE_S3_EVENT_UPLOAD_PREFIX: events/
      LANGFUSE_S3_MEDIA_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_MEDIA_UPLOAD_REGION: auto
      LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT: http://minio:9000
      LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE: true
      LANGFUSE_S3_MEDIA_UPLOAD_PREFIX: media
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_AUTH: myredissecret

  langfuse-web:
    image: langfuse/langfuse:3
    restart: always
    depends_on:
      - postgres
      - minio
      - redis
      - clickhouse
    ports:
      - "3000"
    environment:
      DATABASE_URL: postgres://postgres:password@postgres:5432/langfuse
      SALT: "mysalt"
      ENCRYPTION_KEY: ${LANGFUSE_ENCRYPTION_KEY}
      TELEMETRY_ENABLED: true
      LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES: true
      CLICKHOUSE_MIGRATION_URL: clickhouse://clickhouse:9000
      CLICKHOUSE_URL: http://clickhouse:8123
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
      CLICKHOUSE_CLUSTER_ENABLED: false
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_EVENT_UPLOAD_REGION: auto
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: http://minio:9000
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: true
      LANGFUSE_S3_EVENT_UPLOAD_PREFIX: events/
      LANGFUSE_S3_MEDIA_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_MEDIA_UPLOAD_REGION: auto
      LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT: http://minio:9000
      LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE: true
      LANGFUSE_S3_MEDIA_UPLOAD_PREFIX: media
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_AUTH: myredissecret
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: mysecret

  clickhouse:
    image: clickhouse/clickhouse-server
    restart: always
    user: "101:101"
    container_name: clickhouse
    hostname: clickhouse
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
    volumes:
      - ${CLICKHOUSE_DATA_VOLUME}:/var/lib/clickhouse:z
      - ${CLICKHOUSE_LOG_VOLUME}:/var/log/clickhouse-server:z

  minio:
    image: minio/minio
    restart: always
    container_name: minio
    entrypoint: sh -c
    command: 'mkdir -p /data/langfuse && exec minio server --address ":9000" --console-address ":9001" /data'
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniosecret
    volumes:
      - ${MINIO_VOLUME}:/data
    labels:
      io.rancher.scheduler.affinity:host_label: ${host_labels}
      io.rancher.container.hostname_override: container_name

  redis:
    image: redis:7
    restart: always
    command:
      - "redis-server"
      - "--requirepass"
      - "myredissecret"
    volumes:
      - ${REDIS_VOLUME}:/data
    labels:
      io.rancher.scheduler.affinity:host_label: ${host_labels}
      io.rancher.container.hostname_override: container_name



volumes:
  {{.Values.DB_VOLUME}}:
    external: true
    driver: ${DB_VOLUME_DRIVER}
    {{- if .Values.DB_VOLUME_DRIVER_OPTS}}
    driver_opts:
      {{.Values.DB_VOLUME_DRIVER_OPTS}}
    {{- end}}
  {{.Values.REDIS_VOLUME}}:
    external: true
    driver: ${REDIS_VOLUME_DRIVER}
    {{- if .Values.REDIS_VOLUME_DRIVER_OPTS}}
    driver_opts:
      {{.Values.REDIS_VOLUME_DRIVER_OPTS}}
    {{- end}}

  {{.Values.MINIO_VOLUME}}:
    external: true
    driver: ${MINIO_VOLUME_DRIVER}
    {{- if .Values.MINIO_VOLUME_DRIVER_OPTS}}
    driver_opts:
      {{.Values.MINIO_VOLUME_DRIVER_OPTS}}
    {{- end}}

  {{.Values.CLICKHOUSE_DATA_VOLUME}}:
    external: true
    driver: ${CLICKHOUSE_DATA_VOLUME_DRIVER}
    {{- if .Values.CLICKHOUSE_DATA_VOLUME_DRIVER_OPTS}}
    driver_opts:
      {{.Values.CLICKHOUSE_DATA_VOLUME_DRIVER_OPTS}}
    {{- end}}

  {{.Values.CLICKHOUSE_LOG_VOLUME}}:
    external: true
    driver: ${CLICKHOUSE_LOG_VOLUME_DRIVER}
    {{- if .Values.CLICKHOUSE_LOG_VOLUME_DRIVER_OPTS}}
    driver_opts:
      {{.Values.CLICKHOUSE_LOG_VOLUME_DRIVER_OPTS}}
    {{- end}}
