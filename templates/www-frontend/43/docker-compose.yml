version: "2"
services:
  apache:
    image: eeacms/apache-eea-www:21.9.28
    mem_limit: 4g
    mem_reservation: 1g
    ports:
    - "6080:80"
    labels:
      io.rancher.scheduler.global: 'true'
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      apache: 'true'
    environment:
      APACHE_ENABLE_SSL: "false"
      SERVER_NAME: "${SERVER_NAME}"
      APACHE_FILE_LOGS: 'yes'
      APACHE_UNDER_PROXY: 'yes'
      APACHE_LOGS_DAYS: '31'
      APACHE_NFS_LOCATION: "/logs"
      TZ: "${TZ}"
    depends_on:
    - varnish
    links:
    - varnish
    volumes:
    - www-ssl-certs:/data/www-ssl-certs:ro
    - www-static-resources:/var/www-static-resources
    - apache-local-logs:/var/log/httpd/
    - www-apache-logs:/logs
  varnish:
    image: eeacms/varnish-eea-www:21.2.8
    mem_limit: ${CACHE_SIZE}
    mem_reservation: 1g
    ports:
    - "6081:6081"
    - "6085:6085"
    labels:
      io.rancher.scheduler.global: 'true'
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      varnish: 'true'
    depends_on:
    - anon
    - auth
    - download
    links:
    - anon
    - auth
    - download
    environment:
      TZ: "${TZ}"
      CACHE_SIZE: "${CACHE_SIZE}"
      DASHBOARD_USER: "${DASHBOARD_USER}"
      DASHBOARD_PASSWORD: "${DASHBOARD_PASSWORD}"
      DASHBOARD_SERVERS: "${DASHBOARD_SERVERS}"
      AUTOKILL_CRON: "${AUTOKILL_CRON}"
  auth:
    image: eeacms/haproxy:1.8-1.2
    mem_limit: 1g
    mem_reservation: 128m
    ports:
    - "32700:1936"
    labels:
      io.rancher.scheduler.global: 'true'
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      haproxy: 'true'
      auth: 'true'
    depends_on:
    - auth-instance-a
    - auth-instance-b
    links:
    - auth-instance-a
    - auth-instance-b
    environment:
      FRONTEND_PORT: "8080"
      BACKENDS_PORT: "8080"
      HTTPCHK: "GET /health.check"
      INTER: "20s"
      DOWN_INTER: "5s"
      FAST_INTER: "15s"
      TIMEOUT_SERVER: "120s"
      TIMEOUT_CLIENT: "120s"
      STATS_AUTH: "${HAPROXY_USER}:${HAPROXY_PASS}"
      BACKENDS: "auth-instance-a auth-instance-b"
      DNS_ENABLED: "True"
      TZ: "${TZ}"
  anon:
    image: eeacms/haproxy:1.8-1.2
    mem_limit: 1g
    mem_reservation: 128m
    ports:
    - "32800:1936"
    labels:
      io.rancher.scheduler.global: 'true'
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      haproxy: 'true'
      anon: 'true'
    depends_on:
    - anon-instance-a
    - anon-instance-b
    links:
    - anon-instance-a
    - anon-instance-b
    environment:
      FRONTEND_PORT: "8080"
      BACKENDS_PORT: "8080"
      HTTPCHK: "GET /health.check"
      INTER: "5s"
      TIMEOUT_SERVER: "120s"
      TIMEOUT_CLIENT: "120s"
      STATS_AUTH: "${HAPROXY_USER}:${HAPROXY_PASS}"
      BACKENDS: "anon-instance-a anon-instance-b"
      DNS_ENABLED: "True"
      TZ: "${TZ}"
  download:
    image: eeacms/haproxy:1.8-1.2
    mem_limit: 1g
    mem_reservation: 128m
    ports:
    - "32900:1936"
    labels:
      io.rancher.scheduler.global: 'true'
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      haproxy: 'true'
      download: 'true'
    depends_on:
    - download-instance-a
    - download-instance-b
    links:
    - download-instance-a
    - download-instance-b
    environment:
      FRONTEND_PORT: "8080"
      BACKENDS_PORT: "8080"
      HTTPCHK: "GET /health.check"
      INTER: "5s"
      TIMEOUT_SERVER: "120s"
      TIMEOUT_CLIENT: "120s"
      STATS_AUTH: "${HAPROXY_USER}:${HAPROXY_PASS}"
      BACKENDS: "download-instance-a download-instance-b"
      DNS_ENABLED: "True"
      TZ: "${TZ}"
  auth-instance-a:
    image: rancher/dns-service
    external_links:
    - ${AUTH_INSTANCE_A}:auth-instance-a
  auth-instance-b:
    image: rancher/dns-service
    external_links:
    - ${AUTH_INSTANCE_B}:auth-instance-b
  anon-instance-a:
    image: rancher/dns-service
    external_links:
    - ${ANON_INSTANCE_A}:anon-instance-a
  anon-instance-b:
    image: rancher/dns-service
    external_links:
    - ${ANON_INSTANCE_B}:anon-instance-b
  download-instance-a:
    image: rancher/dns-service
    external_links:
    - ${DOWNLOAD_INSTANCE_A}:download-instance-a
  download-instance-b:
    image: rancher/dns-service
    external_links:
    - ${DOWNLOAD_INSTANCE_B}:download-instance-b

volumes:
  apache-local-logs:
    driver: local
    per_container: true
  www-apache-logs:
    external: true
  www-static-resources:
    external: true
  www-ssl-certs:
    external: true
